name: Test Build

on:
  push:
  pull_request:
    branches: [main]
jobs:
  build-pypi:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Twine and Build
        run: sudo pip install twine build

      - name: Create the distribution
        run: |
          git fetch --prune --unshallow --tags
          sudo python3 -m build

  build-conda:
    runs-on: ubuntu-latest
    # sets default shell to remove need for source to run the conda shell
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-activate-base: true
          activate-environment: true
          python-version: 3.12
          miniconda-version: "latest"
          channels: conda-forge,mosek,slacgismo
          channel-priority: true

      - name: Install the Conda Dependencies
        shell: bash -l {0}
        run: |
          pip install -e .

      # echo yes before login to prevent anaconda bug breaking automation
      # git tags MUST be fetched otherwise output will be blank
      # bash variables cannot be used in github actions, must use actions specific syntax and methods
      # channels need to be specified on build and are saved in the package for installs
      - name: Build the Anaconda Package
        shell: bash -l {0}
        id: condabuild
        run: |
          conda install conda-build
          VERSION_FROM_GIT_TAG=$(git tag --list "v*[0-9]" --sort=version:refname | tail -1 | cut -c 2-)test conda build . --numpy 2.0 --no-anaconda-upload
          echo "gitversion=$(git tag --list "v*[0-9]" --sort=version:refname | tail -1 | cut -c 2-)" >> $GITHUB_OUTPUT

      - name: Upload the Anaconda Package
        shell: bash -l {0}
        id: condaload
        run: |
          conda install anaconda-client
          anaconda upload -u slacgismo  /home/runner/miniconda3/envs/true/conda-bld/noarch/solar-data-tools-test-py_0.tar.bz2
